
variables:
  EXE_RELEASE_FOLDER: 'PersikSharp\bin\Release'
  DEPLOY_FOLDER: 'C:\Projects\PersikSharp\Builds'
  NUGET_PATH: 'C:\Nuget\nuget.exe'
  MSBUILD_PATH: 'E:\Microsoft Visual Studio\2019\Preview\MSBuild\Current\Bin\msbuild.exe'
  NUNIT_PATH: 'C:\Program Files (x86)\NUnit.org\nunit-console\nunit3-console.exe'

policy: pull-push 

stages:
  - build
  - deploy

build_job:
  stage: build
  script:
    - '& "$env:NUGET_PATH" restore' # restore Nuget dependencies
    - '& "$env:MSBUILD_PATH" /p:Configuration=Release' # build the project
  artifacts:
    expire_in: 1 week # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '$env:EXE_RELEASE_FOLDER\PersikSharp.exe' # saving exe to copy to deploy folder
      - '$env:TEST_FOLDER\' # saving entire Test project so NUnit can run tests 

deploy_job:
  stage: deploy
  script:
    # Compose a folder for each release based on commit tag.
    # Assuming your tag is Rev1.0.0.1, and your last commit message is 'First commit'
    # the artifact files will be copied to:
    # P:\Projects\YourApp\Builds\Rev1.0.0.1 - First commit\
    - '$commitSubject = git log -1 --pretty=%s'
    - '$deployFolder = $($env:DEPLOY_FOLDER) + "\" + $($env:CI_BUILD_TAG) + " - " + $commitSubject + "\"'

    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\PersikSharp.exe" "$deployFolder"'

  dependencies:
    - build_job